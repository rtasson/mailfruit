---
# The backups role must be run prior to this, to allow backing up the db before
# potential modifications
- include_role:
    name: jq

- include_role:
    name: sqlite3

- name: list tables in database
  shell: |
    if [ -e /var/lib/dovecot/passwd.db ]; then
       echo ".tables" | sqlite3 /var/lib/dovecot/passwd.db
    else
       echo ""
    fi
  register: db_tables

- name: create mailboxes table in database
  shell: |
    /usr/local/bin/backup.sh
    echo "CREATE TABLE 'mailboxes' (
        'user_id' INTEGER PRIMARY KEY,
        'username' VARCHAR(128) NOT NULL,
        'domain' VARCHAR(128) NOT NULL,
        'password' VARCHAR(64) NOT NULL,
        'maildir' VARCHAR(64) NOT NULL,
        'is_active' int(1) NOT NULL DEFAULT 0,
        'quota' UNSIGNED BIG INT NOT NULL DEFAULT 100000000 
    );" | sqlite3 /var/lib/dovecot/passwd.db
  when: db_tables.stdout.find('mailboxes') == -1
  notify:
    - restart dovecot

- name: create storage_keys table in database
  shell: |
    /usr/local/bin/backup.sh
    echo "CREATE TABLE 'storage_keys' (
      'id' INTEGER PRIMARY KEY,
      'enabled' tinyint(4) DEFAULT '1',
      'public_key' text,
      'pwhash_algo' tinyint(4) DEFAULT '0',
      'pwhash_opslimit' int(11) DEFAULT NULL,
      'pwhash_memlimit' int(11) DEFAULT NULL,
      'pwhash_salt' varchar(255) DEFAULT NULL,
      'sk_nonce' varchar(255) DEFAULT NULL,
      'locked_secretbox' text,
      'user_id' int(11) DEFAULT NULL
    );" | sqlite3 /var/lib/dovecot/passwd.db
  when: db_tables.stdout.find('storage_keys') == -1
  notify:
    - restart dovecot

- name: manage dovecot passwd db permissions
  file:
    path: /var/lib/dovecot/passwd.db
    owner: root
    group: root
    mode: 600

- name: setup /usr/local/bin/add_user.sh helper script
  template:
    src: add_user.sh.j2
    dest: /usr/local/bin/add_user.sh
    owner: root
    group: root
    mode: 555
    backup: yes

- name: test for test user
  shell: echo "select user_id from mailboxes where username='test' and domain='{{mail_domain}}';" | sqlite3 /var/lib/dovecot/passwd.db
  register: test_user
  when:
    - debug is defined

- name: create test@{{ mail_domain }} (password 'ih68d8lS7fI3T1VNJ16ycRdVN') for debug in sqlite passwd database
  when:
    - debug is defined
    - test_user.stdout == ''
  shell: /usr/local/bin/add_user.sh
